- name: Format Configuration Variables
  set_fact:
    config:
      cluster:
        cluster_name: "{{ cluster_name }}"
        region: "{{ region }}"
        rosa_token: "{{ lookup('env', 'ROSA_TOKEN') }}"
        aws_access_key_id: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_access_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
      client:
        client_id: "{{ lookup('env', 'CLIENT_ID') }}"
        client_secret: "{{ lookup('env', 'CLIENT_SECRET') }}"
      idp:
        username: "{{ lookup('env', 'ADMIN_USERNAME') }}"
        password: "{{ lookup('env', 'ADMIN_PASSWORD') }}"
        issuer_url: https://keycloak-keycloak.{{ domain }}/auth/realms/{{ lookup('env', 'CLIENT_ID') }}
# - debug:
#     msg: "{{ config.cluster.rosa_token }}"

- name: Log ROSA Version
  command: rosa version
  register: rosa_version
- debug:
    msg: "{{ rosa_version }}"

- name: Login to ROSA
  command: rosa login --token={{ config.cluster.rosa_token }}
  register: rosa_login_output
- debug:
    msg: "{{ rosa_login_output.stdout }}"

- name: Check if Identity Provider exists
  command: |
    rosa list idps \
      --cluster={{ config.cluster.cluster_name }} \
      --region={{ config.cluster.region }} \
      -o json
  register: rosa_idps
- name: Set IDP Facts
  set_fact:
    idp: "{{ rosa_idps.stdout | from_json }}"
# - debug:
#     msg: "{{ idp }}"

- debug:
    msg: "idp does exists"
  when: idp | selectattr('name', 'equalto', config.client.client_id) | list | length > 0

- name: Add Identity Provider if not exists
  when: idp | selectattr('name', 'equalto', config.client.client_id) | list | length < 1
  block:
    - name: Add ROSA Identity Provider
      command: >
        rosa create idp
        --cluster={{ config.cluster.cluster_name }}
        --name={{ config.client.client_id }}
        --type="openid"
        --client-id={{ config.client.client_id }}
        --client-secret={{ config.client.client_secret }}
        --issuer-url={{ config.idp.issuer_url }}
        --mapping-method="claim"
        --email-claims="email"
        --name-claims="name"
        --groups-claims="groups"
        --username-claims="preferred_username"
        --region={{ config.cluster.region }}
      register: add_idp_output
    - debug:
        msg: "idp does not exist"

- name: Create a Keycloak group, authentication with credentials
  community.general.keycloak_group:
    name: cluster-admins
    realm: "{{ config.client.client_id }}"
    auth_client_id: "{{ config.client.client_id }}"
    auth_keycloak_url: https://keycloak-keycloak.{{ domain }}/auth/admin
    auth_realm: master
    auth_username: "{{ config.idp.username }}"
    auth_password: "{{ config.idp.password }}"
  register: group
  # delegate_to: localhost
