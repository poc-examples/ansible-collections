- name: Format Configuration Variables
  set_fact:
    config:
      cluster:
        rosa_token: "{{ lookup('env', 'ROSA_TOKEN') }}"
        aws_access_key_id: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_access_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
      client:
        client_id: "{{ lookup('env', 'CLIENT_ID') }}"
        client_secret: "{{ lookup('env', 'CLIENT_SECRET') }}"

# - debug:
#     msg: "{{ config.cluster.rosa_token }}"

- name: Login to ROSA
  command: rosa login --token={{ config.cluster.rosa_token }}
  register: rosa_login_output
- debug:
    msg: "{{ rosa_login_output }}"

# - name: Check if Identity Provider exists
#   command: rosa list idps --cluster={{ cluster_name }}
#   register: rosa_idps
# - debug:
#     msg: "ROSA IDPs: {{ rosa_idps.stdout }}"

# - name: Add Identity Provider if not exists
#   when: rosa_idps.stdout.find(idp_name) == -1
#   block:
#     - name: Add ROSA Identity Provider
#       command: >
#         rosa create idp
#         --cluster={{ cluster_name }}
#         --name={{ idp_name }}
#         --type="openid"
#         --client-id={{ client_id }}
#         --client-secret={{ client_secret }}
#         --issuer-url={{ issuer_url }}
#         --mapping-method="claim"
#         --email-claims="email"
#         --name-claims="name"
#         --groups-claims="groups"
#         --username-claims="preferred_username"
#         --region={{ region }}
#       register: add_idp_output
#     - debug:
#         msg: "IDP creation result: {{ add_idp_output.stdout }}"

# - name: Skip adding IDP if it already exists
#   when: rosa_idps.stdout.find(idp_name) != -1
#   debug:
#     msg: "Identity provider {{ idp_name }} already exists. Skipping addition."